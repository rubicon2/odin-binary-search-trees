(()=>{"use strict";var t={426:(t,e,r)=>{r.d(e,{Z:()=>a});var n=r(81),o=r.n(n),l=r(645),i=r.n(l)()(o());i.push([t.id,"",""]);const a=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,l){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(n)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var c=0;c<t.length;c++){var u=[].concat(t[c]);n&&i[u[0]]||(void 0!==l&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=l),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),e.push(u))}},e}},81:t=>{t.exports=function(t){return t[1]}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var l={},i=[],a=0;a<t.length;a++){var s=t[a],c=n.base?s[0]+n.base:s[0],u=l[c]||0,h="".concat(c," ").concat(u);l[c]=u+1;var d=r(h),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(f);else{var p=o(f,n);n.byIndex=a,e.splice(a,0,{identifier:h,updater:p,references:1})}i.push(h)}return i}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var l=n(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<l.length;i++){var a=r(l[i]);e[a].references--}for(var s=n(t,o),c=0;c<l.length;c++){var u=r(l[c]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}l=s}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var l=r.sourceMap;l&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var l=e[n]={id:n,exports:{}};return t[n](l,l.exports,r),l.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{var t=r(379),e=r.n(t),n=r(795),o=r.n(n),l=r(569),i=r.n(l),a=r(565),s=r.n(a),c=r(216),u=r.n(c),h=r(589),d=r.n(h),f=r(426),p={};p.styleTagTransform=d(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=u(),e()(f.Z,p),f.Z&&f.Z.locals&&f.Z.locals;class g{constructor(t=null,e=null,r=null){this.data=t,this.left=e,this.right=r}}function v(t,e){return Math.round(function(t,e){return t+(e-t)*Math.random()}(t,e))}function m(t,e,r){let n=[];for(;n.length<=r;)n.push(v(t,e));return n}let b=new class{constructor(t){t.sort(((t,e)=>t>e)),t=[...new Set(t)],this.root=this.build(t)}levelorder(t,e=this.root){let r=[e],n=[];for(;r.length>0;){let e=r.shift();null!=t?t(e):n.push(e.data),null!=e.left&&r.push(e.left),null!=e.right&&r.push(e.right)}if(!t)return n}rec_preorder(t,e=this.root){if(!t){let r=[e.data];return null!=e.left&&r.push(...this.rec_preorder(t,e.left)),null!=e.right&&r.push(...this.rec_preorder(t,e.right)),r}t(e),null!=e.left&&this.rec_preorder(t,e.left),null!=e.right&&this.rec_preorder(t,e.right)}preorder(t,e=this.root){let r=[e],n=[];for(;r.length>0;){let e=r.pop();null!=t?t(e):n.push(e.data),null!=e.right&&r.push(e.right),null!=e.left&&r.push(e.left)}if(!t)return n}inorder(t,e=this.root){if(!e.left&&!e.right)return t?void t(e):[e.data];if(!t){let r=[];return null!=e.left&&(r=r.concat(this.inorder(t,e.left))),r=r.concat(e.data),null!=e.right&&(r=r.concat(this.inorder(t,e.right))),r}null!=e.left&&this.inorder(t,e.left),t(e),null!=e.right&&this.inorder(t,e.right)}postorder(t,e=this.root){if(!e.left&&!e.right)return t?void t(e):[e.data];if(!t){let r=[];return null!=e.left&&(r=r.concat(this.postorder(t,e.left))),null!=e.right&&(r=r.concat(this.postorder(t,e.right))),r=r.concat(e.data),r}null!=e.left&&this.postorder(t,e.left),null!=e.right&&this.postorder(t,e.right),t(e)}insert(t){let e=this.root;for(;;){if(e.data===t){console.warn(`Attempted to add ${t} to tree - duplicate value.`);break}if(t<e.data){if(!e.left){e.left=new g(t);break}e=e.left}else if(t>e.data){if(!e.right){e.right=new g(t);break}e=e.right}}}height(t){return t?.left||t?.right?1+Math.max(this.height(t.left),this.height(t.right)):0}depth(t){let e=this.root,r=0;for(;null!=e;){if(e.data===t.data)return r;r++,e=t.data<e.data?e.left:e.right}return null}isBalanced(t=this.root){if(!t)return!0;let e=t.left?this.height(t.left):0,r=t.right?this.height(t.right):0;return Math.abs(e-r)<=1&&this.isBalanced(t.left)&&this.isBalanced(t.right)}rebalance(){this.root=this.build(this.inorder())}delete(t,e=this.root){let{target:r,parent:n,whichChild:o}=this.findItemAndParent(t,e);if(r.left||r.right)if(r.right)if(r.left){let t=this.findSmallestItemInTree(r.right),e=t.data;this.delete(t.data,r),r.data=e}else{let t=r.right;this.delete(t.data,r),Object.assign(r,t)}else{let t=r.left;this.delete(t.data,r),Object.assign(r,t)}else n[o]=null}findItemAndParent(t,e=this.root){if(e.data===t)return{parent:null,target:e,whichChild:null};let r=e;for(;null!=r;){if(r.left?.data===t)return{parent:r,target:r.left,whichChild:"left"};if(r.right?.data===t)return{parent:r,target:r.right,whichChild:"right"};r=t<r.data?r.left:r.right}return console.warn(`Looked for ${t} in Tree - not found.`),null}find(t,e=this.root){for(;null!=e;){if(e.data===t)return e;e=t<e.data?e.left:e.right}return console.warn(`Looked for ${t} in Tree - not found.`),null}findSmallestItemInTree(t=this.root){for(;null!=t.left;)t=t.left;return t}findLargestItemInTree(t=this.root){for(;null!=t.right;)t=t.right;return t}build(t){if(t.length<=0)return null;if(1===t.length)return new g(t[0]);let e=Math.floor(t.length/2);return new g(t[e],this.build(t.slice(0,e)),this.build(t.slice(e+1)))}prettyPrint(t=this.root,e="",r=!0){null!==t&&(null!==t.right&&this.prettyPrint(t.right,`${e}${r?"│   ":"    "}`,!1),console.log(`${e}${r?"└── ":"┌── "}${t.data}`),null!==t.left&&this.prettyPrint(t.left,`${e}${r?"    ":"│   "}`,!0))}}(m(0,99,10));b.prettyPrint(),console.log("Is Balanced: "+b.isBalanced()),console.log("LEVEL ORDER:"),console.log(b.levelorder()),console.log("PRE ORDER:"),console.log(b.preorder()),console.log("POST ORDER:"),console.log(b.postorder()),console.log("IN ORDER:"),console.log(b.inorder()),console.log("Adding the DEBASERS! (because they debase my beautiful balanced tree)"),m(100,200,10).forEach((t=>{b.insert(t)})),console.log("Is Balanced: "+b.isBalanced()),b.rebalance(),console.log("Tree was rebalanced. Purity has been regained."),console.log("Is Balanced: "+b.isBalanced()),console.log("LEVEL ORDER:"),console.log(b.levelorder()),console.log("PRE ORDER:"),console.log(b.preorder()),console.log("POST ORDER:"),console.log(b.postorder()),console.log("IN ORDER:"),console.log(b.inorder())})()})();